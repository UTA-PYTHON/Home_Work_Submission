# -*- coding: utf-8 -*-
"""Homework8_Burgett.Shelbi1001318717.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JW1EI0k_DXS5iHEnup9h5mQpzfHliOjo

# **Week 12. Homework 8. Pandas**


Shelbi Burgett

---



---



---

1. Load the dataset into a pandas DataFrame and display the first few rows.
"""

import numpy as np
import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
!ls

data=pd.read_csv('Startups (2) (1).csv')
data.head(5)

"""---



---

2. Find the number of rows and columns in the dataset.
"""

data.shape

"""---


---

3. Check for missing values in each column and handle them appropriately.
"""

print(data.isnull())
print(data.isnull().sum())

"""---


---

4. Calculate the mean, median, and standard deviation of the 'R&D_Spend' column.
"""

if data['R&D Spend'].dtype in [int, float]:
  mean_val=data['R&D Spend'].mean()
  median_val=data['R&D Spend'].median()
  std_dev_val=data['R&D Spend'].std()
  print(f"Mean:{mean_val}")
  print(f"Median:{median_val}")
  print(f"Standard Deviation:{std_dev_val}")

"""---


---

5. Filter and create a new DataFrame containing companies located in a **California**.
"""

filtered_data=data[data['State']=='California']
filtered_data

"""---


---

6. Sort the dataset by 'Profit' in descending order.
"""

data.sort_values('Profit', ascending=False, inplace=True)
print(data)

"""---


---

7. Group the data by 'State' and calculate the total 'Profit' for each state.
"""

agg_profit=data.groupby('State').agg({"Profit":'sum'})

print(agg_profit)

"""---


---

8. Create a bar chart to visualize the total 'Profit' by 'State.'
"""

sns.barplot(data, x='State', y='Profit')
plt.xlabel('State')
plt.ylabel('Profit')
plt.xticks(rotation=95)
plt.show()

"""9. Calculate the correlation between 'R&D_Spend' and 'Profit.'


"""

print(data['R&D Spend'].corr(data['Profit']))

"""---



---



---

10. Create a new column 'Total_Spend' that represents the sum of 'R&D_Spend,' 'Administration,' and 'Marketing_Spend' for each company.
"""

data_sub=data

data_sub.columns=['RD_Spend', 'Administration', 'Marketing_Spend', 'State', 'Profit']

data_sub['Total_Spend']=data.Administration+data.RD_Spend+data.Marketing_Spend

data_sub

"""11. Calculate the average **R&D_Spend**, **Administration**, and **Marketing_Spend** for companies located in each **State**


"""

agg_data=data.groupby('State').agg({"R&D Spend":'mean',
                                    'Administration':'mean',
                                    'Marketing Spend':'mean'})

print(agg_data)

"""12. Create a histogram to visualize the distribution of 'Profit.'


"""

plt.figure(figsize=[10,8])
plt.hist(x='Profit', bins=8, color='#0504aa',alpha=0.7, rwidth=0.85)
plt.grid(axis='y', alpha=0.75)
plt.xlabel('Profit',fontsize=15)
plt.ylabel('Frequency',fontsize=15)
plt.xticks(fontsize=15)
plt.yticks(fontsize=15)
plt.ylabel('Frequency',fontsize=15)
plt.title('Distribution of Profit',fontsize=15)
plt.show()

"""---



---

13. Filter the dataset to include only companies with 'R&D_Spend' greater than a 12000.
"""

filtered=data[data['RD_Spend']>12000]

filtered

"""---



---

14. Calculate the total 'Profit' for companies with 'Marketing_Spend' above a certain threshold.
"""

filtered_m=data[data['Marketing_Spend']>300000]

filtered_m

dat_m=filtered_m['Profit'].sum()
dat_m

"""15. Replace any missing values in the 'Marketing_Spend' column with the mean spending of the dataset.


"""

print(data.isnull().sum())

#there are no missing values in the 'Marketing_Spend' column

"""---


---

16. Create a new column 'Profit_Margin' that represents the profit margin for each company (Profit / Total_Spend).
"""

data['Profit_Margin']=data.Profit/data.Total_Spend
data

"""---



---



---

17. Sort the dataset by 'Profit_Margin' in descending order.
"""

data.sort_values('Profit_Margin', ascending=False, inplace=True)
print(data)

"""---



---

18. Calculate the average profit margin for companies in each 'State' and create a bar chart to display it.
"""

avg_prof=data.groupby('State')['Profit_Margin'].mean()
print(avg_prof)

sns.barplot(data, x='State', y='Profit_Margin')
plt.xlabel('State')
plt.ylabel('Profit_Margin')
plt.xticks(rotation=95)
plt.show()

"""---



---



---

19. Find the maximum 'R&D_Spend' in each **State**.
"""

agg_dat=data.groupby('State').agg({"RD_Spend":'max'})
agg_dat